--Setsup user input (might not be necessary)
function init(self)
	--msg.post("#level_one_proxy", "load")
	msg.post(".", "acquire_input_focus")
	self.drop_the_pop = false
	--msg.post("#", "start_level")
	self.level_1 = false
	self.level_2 = false
	self.level_3 = false
end
--NOT IN USE
function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end
--NOT IN USE
function update(self, dt)
	-- Add update code here
	-- Remove this function if not needed
end
--Taks action on messages sent and posted
function on_message(self, message_id, message, sender)
	--Checks if message_id posted is for a level load.
	if message_id == hash("replay_level") then
		self.level_1 = true
		local proxy_lvl = "#level_one_proxy"
		msg.post(proxy_lvl, "disable")
		msg.post(proxy_lvl, "unload")
	elseif message_id == hash("replay_level_2") then
		self.level_2 = true
		local proxy_lvl = "#level_two_proxy"
		msg.post(proxy_lvl, "disable")
		msg.post(proxy_lvl, "unload")
	elseif message_id == hash("replay_level_3") then
		self.level_3 = true
		local proxy_lvl = "#level_three_proxy"
		msg.post(proxy_lvl, "disable")
		msg.post(proxy_lvl, "unload")
	elseif message_id == hash("credits") then
		self.level_1 = false
		msg.post("#level_one_proxy", "disable")
		msg.post("#level_one_proxy", "unload")
		self.level_2 = false
		msg.post("#level_two_proxy", "disable")
		msg.post("#level_two_proxy", "unload")
		self.level_3 = false
		msg.post("#level_three_proxy", "disable")
		msg.post("#level_three_proxy", "unload")
		msg.post("main:/levels#main", "show_creds")
	elseif message_id == hash("credits_lv1") then
		self.level_1 = false
		msg.post("#level_one_proxy", "disable")
		msg.post("#level_one_proxy", "unload")
	elseif message_id == hash("credits_lv2") then
		self.level_1 = false
		msg.post("#level_one_proxy", "disable")
		msg.post("#level_one_proxy", "unload")
		self.level_2 = false
		msg.post("#level_two_proxy", "disable")
		msg.post("#level_two_proxy", "unload")
	elseif message_id == hash("show_main_menu") then
		msg.post("main:/levels#main", "show_mm")
	elseif message_id == hash("proxy_unloaded") then
		--if go.get("main:/levels#main", "level_1") then
		if self.level_1 then
			self.level_1 = false
			msg.post(proxy_lvl, "load_level")
		elseif self.level_2 then
			self.level_2 = false
			msg.post(proxy_lvl, "load_level_2")
		elseif self.level_3 then
			self.level_3 = false
			msg.post(proxy_lvl, "load_level_3")
		end
	end
	if message_id == hash("load_level") then
		--stores a string for a level call through a prxy.
		local proxy_lvl_call = "#level_one_proxy"
		msg.post("main:/levels#main", "level_1")
		--post message for a proxy call to load a level.
		msg.post(proxy_lvl_call, "load")
	elseif message_id == hash("load_level_2") then
		local proxy_lvl_call = "#level_two_proxy"
		msg.post(proxy_lvl_call, "load")
	elseif message_id == hash("load_level_3") then
		print("BOOP")
		local proxy_lvl_call = "#level_three_proxy"
		msg.post(proxy_lvl_call, "load")
	elseif message_id == hash("proxy_loaded") then -- message id check for already loaded level.
		--sends messages to sender regarding the level loaded.
		msg.post(sender, "init")
		msg.post(sender, "enable")
	elseif message_id == hash("tutorial") then
		msg.post("main:/levels#main", "show_tutorial")
	end
	
end

function on_input(self, action_id, action)
	-- Add input-handling code here
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
